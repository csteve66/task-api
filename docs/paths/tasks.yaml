get:
  summary: List all tasks
  tags:
    - Tasks
  parameters:
    - name: completed
      in: query
      required: false
      description: Filter tasks by completion status
      schema:
        type: boolean
        example: true
    - name: limit
      in: query
      description: Maximum number of tasks to return
      schema:
        type: integer
        example: 10
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../components/schemas/Task.yaml
post:
  summary: Create a new task
  tags:
    - Tasks
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../components/schemas/Task.yaml
  responses:
    '201':
      description: Task created successfully
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Task.yaml
    '400':
      schema:
        $ref: ../components/responses/BadRequest.yaml

/tasks/{id}:
  get:
    summary: Get a task by id
    parameters:
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: Task found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Task.yaml'
      '400':
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '../components/schemas/ValidationError.yaml'
      '404':
        description: Not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/NotFoundError.yaml'
